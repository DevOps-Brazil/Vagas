name: Atualizar README com Issues

on:
  issues:
    types: [opened, closed, reopened]
  workflow_dispatch:
  schedule:
    - cron: '0 */12 * * *'

jobs:
  update-readme:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
      
      - name: Atualizar README
        run: |
          # Configurar token e repo
          GITHUB_TOKEN="${{ secrets.GITHUB_TOKEN }}"
          REPO="${{ github.repository }}"
          
          # Buscar issues abertas
          echo "Buscando issues abertas..."
          issues=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/repos/$REPO/issues?state=open&per_page=100" | \
            jq '[.[] | select(has("pull_request") | not)]')
          
          # Contar issues
          issues_count=$(echo "$issues" | jq 'length')
          echo "Encontradas $issues_count issues abertas"
          
          # Criar lista de vagas
          vagas_lista=""
          
          if [ "$issues_count" -eq "0" ]; then
            vagas_lista="No momento não há vagas disponíveis. Fique atento para novas oportunidades!"
          else
            while read -r issue; do
              title=$(echo "$issue" | jq -r '.title')
              url=$(echo "$issue" | jq -r '.html_url')
              date=$(echo "$issue" | jq -r '.created_at' | cut -d'T' -f1 | awk -F- '{print $3"/"$2"/"$1}')
              
              vagas_lista="${vagas_lista}- [$title]($url) - _Publicada em $date_\n"
            done < <(echo "$issues" | jq -c '.[]')
          fi
          
          # Criar arquivo temporário com a nova seção
          cat > vagas_section.txt << EOF
          ## Vagas Disponíveis

          Lista de vagas disponíveis:

          $(echo -e "$vagas_lista")

          ## Como publicar uma vaga

          Abra uma [nova issue](https://github.com/$REPO/issues/new) com o título da vaga e todas as informações necessárias no corpo da issue.
          EOF
          
          # Verificar se o README existe
          if [ ! -f "README.md" ]; then
            echo "README não encontrado, criando um novo..."
            cat > README.md << EOF
          # Vagas DevOps

          Repositório para divulgação de vagas de DevOps.
          
          <!-- VAGAS_START -->
          <!-- VAGAS_END -->
          EOF
          fi
          
          # Usar uma abordagem de substituição direta com sed
          sed -i -e '/<!-- VAGAS_START -->/,/<!-- VAGAS_END -->/c\<!-- VAGAS_START -->\n'"$(cat vagas_section.txt)"'\n<!-- VAGAS_END -->' README.md
          
          # Mostrar o arquivo modificado
          echo "Conteúdo do README após modificação:"
          cat README.md
          
          # Configurar git e fazer commit
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add README.md
          git commit -m "docs: atualiza lista de vagas no README [skip ci]"
          git push
